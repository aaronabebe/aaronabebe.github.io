---
---
<div id="three-container" class="three-container no-invert dark:invert"></div>

<script is:inline id="vertexShader" type="x-shader/x-vertex">

    varying vec2 vUv;

    void main()
    {
        vUv = uv;
        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
        gl_Position = projectionMatrix * mvPosition;
    }

</script>

<script is:inline id="fragmentShader" type="x-shader/x-fragment">
    uniform float time;

    varying vec2 vUv;

    void main( void ) {

        vec2 position = - 1.0 + 2.0 * vUv;

        float red = abs( sin( position.x * position.y + time / 5.0 ) );
        float green = abs( sin( position.x * position.y + time / 10.0 ) );
        float blue = abs( sin( position.x * position.y + time / 3.0 ) );
        gl_FragColor = vec4( red, 0.0, blue, 0.2 );

    }

</script>
<script is:inline src="/js/three.min.js"></script>
<script is:inline>
    const container = document.getElementById("three-container");
    const height = container.offsetHeight;
    const width = container.offsetHeight;

    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(width, height);
    renderer.setClearColor(0xffffff, 0);
    container.appendChild(renderer.domElement);

    const clock = new THREE.Clock();

    const camera = new THREE.PerspectiveCamera(
        75,
        width / height,
        0.1,
        1000
    );
    camera.position.z = 5;

    const scene = new THREE.Scene();

    const uniforms = { time: { value: 1.0 } };
    const material = new THREE.ShaderMaterial({
                uniforms: uniforms,
                vertexShader: document.getElementById("vertexShader").textContent,
                fragmentShader: document.getElementById("fragmentShader").textContent
            });


    const mesh = new THREE.Mesh(new THREE.TorusKnotGeometry( 1.5, 0.5, 15, 50 ), material);
    scene.add(mesh);

    function animate() {
        requestAnimationFrame(animate);
        const delta = clock.getDelta();
        uniforms.time.value += delta * 5;


        mesh.rotation.y += delta * 0.5;
        mesh.rotation.x += delta * 0.5;
        renderer.render(scene, camera);
    }

    animate();

</script>
<style>
    .three-container {
        width: 500px;
        height: 500px;
        position: fixed;
        top: 50px;
        right: 0;
        z-index: -9999;
        float: right;
    }
</style>
